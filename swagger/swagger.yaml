definitions:
  controllers.CreateBlogInput:
    properties:
      body:
        type: string
      description:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
  controllers.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  models.Blog:
    properties:
      body:
        type: string
      createdAt:
        type: string
      descriptions:
        type: string
      title:
        description: gorm.Model
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/blog-post:
    get:
      description: Get all added blog posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Blog'
            type: array
      summary: Get all blog posts
    post:
      consumes:
      - application/json
      description: Add a new blog post
      parameters:
      - description: Blog Post object
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateBlogInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CreateBlogInput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Add a new blog post
  /api/blog-post/{id}:
    delete:
      description: Delete a blog post by ID
      parameters:
      - description: Blog Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Delete a blog post
    get:
      description: Get a single blog post by ID
      parameters:
      - description: Blog Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Blog'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Get a single blog post
    patch:
      consumes:
      - application/json
      description: Update a blog post by ID
      parameters:
      - description: Blog Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Blog Post object
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Blog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: Update a blog post
swagger: "2.0"
